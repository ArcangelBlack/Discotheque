<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper.Data" Version="1.0.1" />
    <PackageReference Include="Google.Apis.Customsearch.v1" Version="1.33.0.1146" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="2.0.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="2.0.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="2.0.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.0.2" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.0.3" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.EntityFrameworkCore.Tools.DotNet" Version="2.0.0" />
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.3" />
  </ItemGroup>

  <ItemGroup>
    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Compile Remove="ClientApp\app\components\login\**" />
    <Compile Remove="Core\**" />
    <Content Remove="ClientApp\**" />
    <Content Remove="Core\**" />
    <EmbeddedResource Remove="ClientApp\app\components\login\**" />
    <EmbeddedResource Remove="Core\**" />
    <None Remove="ClientApp\app\components\login\**" />
    <None Remove="Core\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="IRepositoryManager.cs" />
    <Compile Remove="RepositoryManager.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\app\components\discotheques\discotheques.component.ts" />
    <None Remove="ClientApp\app\components\employees\employees.component.ts" />
    <None Remove="ClientApp\app\components\employees\Services\employee.service.ts" />
    <None Remove="StaticFiles\a.pdf" />
    <None Remove="StaticFiles\a.rar" />
    <None Remove="StaticFiles\a.zip" />
  </ItemGroup>

  <ItemGroup>
    <ApplicationDefinition Include="StaticFiles\pdfs\a.pdf">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </ApplicationDefinition>
  </ItemGroup>

  <ItemGroup>
    <Content Include="StaticFiles\a.pdf">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="StaticFiles\a.rar">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="StaticFiles\a.zip">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Logs\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Common\D.Models\D.Models.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\app\components\discotheques\discotheques.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\employees\employees.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\employees\Services\Employee.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <None Update="StaticFiles\SamplePdf.pdf">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
 <!--   <Exec Command="node node_modules/webpack/bin/webpack.js config webpack.config.vendor.js env.prod" />-->
    <!--<Exec Command="node node_modules/webpack/bin/webpack.js env.prod" />-->

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
